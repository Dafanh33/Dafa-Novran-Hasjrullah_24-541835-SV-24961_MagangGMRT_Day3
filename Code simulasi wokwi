/* 
  Nama    : Dafa Novran Hasjrullah
  NIM     : 24/541835/SV/24691
  Program : Magang GMRT 2026 - Day 3
  Judul   : Following-Axis Servo Motor and Motion Detection
  Deskripsi :
    Sistem ini menggunakan 5 buah servo motor yang digerakkan berdasarkan input
    dari rotasi sistem (roll, pitch, yaw) dan deteksi gerakan (PIR sensor).
    - Servo 1 & 2 : bergerak berlawanan arah mengikuti rotasi roll.
    - Servo 3 & 4 : bergerak searah mengikuti rotasi pitch.
    - Servo 5     : bergerak mengikuti rotasi yaw dan kembali ke posisi awal.
    - PIR/Tombol  : jika aktif, semua servo bergerak serentak lalu kembali.
*/

#include <Wire.h>           // Library komunikasi I2C (untuk sensor MPU6050 jika dikembangkan)
#include <ESP32Servo.h>     // Library servo khusus ESP32 (bukan <Servo.h>)

// -----------------------------------------------------------------------------
// Deklarasi Pin
// -----------------------------------------------------------------------------
const int servoPin1 = 13;   // Servo 1 → Roll axis 1
const int servoPin2 = 12;   // Servo 2 → Roll axis 2 (berlawanan dengan servo 1)
const int servoPin3 = 14;   // Servo 3 → Pitch axis 1
const int servoPin4 = 27;   // Servo 4 → Pitch axis 2 (searah servo 3)
const int servoPin5 = 26;   // Servo 5 → Yaw axis
const int pirPin    = 4;    // Pin tombol atau PIR sensor (gerakan eksternal)

// -----------------------------------------------------------------------------
// Deklarasi Objek Servo
// -----------------------------------------------------------------------------
Servo s1, s2, s3, s4, s5;   // Membuat 5 objek servo

// -----------------------------------------------------------------------------
// Variabel global untuk menyimpan sudut tiap sumbu
// -----------------------------------------------------------------------------
int rollAngle = 0;
int pitchAngle = 0;
int yawAngle = 0;

// -----------------------------------------------------------------------------
// Inisialisasi Awal Sistem
// -----------------------------------------------------------------------------
void setup() {
  Serial.begin(115200);              // Inisialisasi komunikasi serial
  pinMode(pirPin, INPUT_PULLDOWN);   // Input tombol/PIR aktif HIGH (gunakan internal pulldown resistor)

  // Hubungkan tiap servo ke pin PWM yang ditentukan
  s1.attach(servoPin1);
  s2.attach(servoPin2);
  s3.attach(servoPin3);
  s4.attach(servoPin4);
  s5.attach(servoPin5);

  // Set posisi awal semua servo = 90° (posisi tegak lurus)
  s1.write(90);
  s2.write(90);
  s3.write(90);
  s4.write(90);
  s5.write(90);

  // Tampilkan pesan siap
  Serial.println("System ready. Ketik perintah:");
  Serial.println("ROLL <derajat>, PITCH <derajat>, YAW <derajat>, atau PIR ON");
}

// -----------------------------------------------------------------------------
// Program Utama (Looping)
// -----------------------------------------------------------------------------
void loop() {
  // Baca input dari Serial Monitor
  if (Serial.available()) {
    String cmd = Serial.readStringUntil('\n');  // Baca satu baris perintah
    cmd.trim();                                 // Hilangkan spasi dan karakter tak perlu

    // Deteksi jenis perintah berdasarkan awalan kata
    if (cmd.startsWith("ROLL")) {
      int angle = cmd.substring(5).toInt();     // Ambil nilai angka setelah kata "ROLL"
      handleRoll(angle);                        // Panggil fungsi handleRoll()
    }
    else if (cmd.startsWith("PITCH")) {
      int angle = cmd.substring(6).toInt();     // Ambil nilai angka setelah kata "PITCH"
      handlePitch(angle);                       // Panggil fungsi handlePitch()
    }
    else if (cmd.startsWith("YAW")) {
      int angle = cmd.substring(4).toInt();     // Ambil nilai angka setelah kata "YAW"
      handleYaw(angle);                         // Panggil fungsi handleYaw()
    }
    else if (cmd.startsWith("PIR ON")) {
      handlePIR();                              // Panggil fungsi handlePIR()
    }
  }

  // Jika tombol ditekan (PIR aktif), jalankan fungsi handlePIR()
  if (digitalRead(pirPin) == HIGH) {
    handlePIR();
  }
}

// -----------------------------------------------------------------------------
// Fungsi handleRoll() → Servo 1 dan 2 bergerak berlawanan arah
// -----------------------------------------------------------------------------
void handleRoll(int angle) {
  Serial.print("ROLL command detected: ");
  Serial.println(angle);

  rollAngle = constrain(angle, -90, 90);  // Batasi nilai agar tetap -90° s/d 90°

  int servo1Pos = 90 - rollAngle;         // Servo1 bergerak melawan arah bidang
  int servo2Pos = 90 + rollAngle;         // Servo2 bergerak berlawanan dengan servo1

  s1.write(servo1Pos);
  s2.write(servo2Pos);

  Serial.print("Servo1 = "); Serial.print(servo1Pos);
  Serial.print(" | Servo2 = "); Serial.println(servo2Pos);
}

// -----------------------------------------------------------------------------
// Fungsi handlePitch() → Servo 3 dan 4 bergerak searah
// -----------------------------------------------------------------------------
void handlePitch(int angle) {
  Serial.print("PITCH command detected: ");
  Serial.println(angle);

  pitchAngle = constrain(angle, -90, 90);  // Batasi nilai pitch
  int pos = 90 + pitchAngle;               // Keduanya bergerak searah

  s3.write(pos);
  s4.write(pos);

  Serial.print("Servo3 & Servo4 = ");
  Serial.println(pos);
}

// -----------------------------------------------------------------------------
// Fungsi handleYaw() → Servo 5 ikut arah, lalu kembali ke posisi awal
// -----------------------------------------------------------------------------
void handleYaw(int angle) {
  Serial.print("YAW command detected: ");
  Serial.println(angle);

  yawAngle = constrain(angle, -90, 90);    // Batasi nilai yaw
  int pos = 90 + yawAngle;                 // Hitung posisi servo yaw

  s5.write(pos);                           // Servo 5 bergerak ke posisi sesuai yaw
  delay(1000);                             // Diam 1 detik
  s5.write(90);                            // Kembali ke posisi awal

  Serial.println("Servo5 kembali ke posisi awal (90°)");
}

// -----------------------------------------------------------------------------
// # Fungsi handlePIR() → Semua servo bergerak serentak lalu kembali
// -----------------------------------------------------------------------------
void handlePIR() {
  Serial.println("PIR aktif! Semua servo bergerak ke posisi 45° lalu kembali...");

  // Gerakkan semua servo ke posisi 45°
  s1.write(45);
  s2.write(45);
  s3.write(45);
  s4.write(45);
  s5.write(45);

  delay(1000);  // Tahan 1 detik

  // Kembalikan semua servo ke posisi 90°
  s1.write(90);
  s2.write(90);
  s3.write(90);
  s4.write(90);
  s5.write(90);

  Serial.println("Semua servo kembali ke posisi awal (90°)");
}
